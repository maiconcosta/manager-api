// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

model Pedido {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cliente   Cliente @relation(fields: [clienteId], references: [id])
  clienteId Int

  status   StatusPedido @relation(fields: [statusId], references: [id])
  statusId Int

  pagamento   FormaPagamento @relation(fields: [pagamentoId], references: [id])
  pagamentoId Int

  produtos ProdutosPedidos[]
}

model ProdutosPedidos {
  pedidos  Pedido @relation(fields: [pedidoId], references: [id])
  pedidoId Int

  produtos  Produto @relation(fields: [produtoId], references: [id])
  produtoId Int

  quantidade Int


  @@id([pedidoId, produtoId])
}

model StatusPedido {
  id   Int    @id @default(autoincrement())
  nome String

  pedido Pedido[]
}

model FormaPagamento {
  id   Int    @id @default(autoincrement())
  nome String

  pedido Pedido[]
}

model Categoria {
  id   Int    @id @default(autoincrement())
  nome String

  produtos Produto[]
}

model Produto {
  id          Int       @id @default(autoincrement())
  nome        String
  valor       Decimal   @db.Decimal(10, 2)
  ativo       Boolean   @default(true)
  categoria   Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  imagem      String?

  pedidos ProdutosPedidos[]
}

model Cliente {
  id       Int               @id @default(autoincrement())
  nome     String?
  telefone String?
  pedidos  Pedido[]
  endereco EnderecoCliente[]
}

model EnderecoCliente {
  id   Int    @id @default(autoincrement())
  nome String

  cliente   Cliente @relation(fields: [clienteId], references: [id])
  clienteId Int
}
